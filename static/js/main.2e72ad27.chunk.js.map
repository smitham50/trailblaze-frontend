{"version":3,"sources":["Scripts/getCoordinates.js","Components/FlashMessage.js","StyledComponents/FormWrapper.js","Components/Signup.js","Selectors/selectors.js","Components/Login.js","Components/UpdateAccount.js","Components/CancelAccountModal.js","Components/ManageAccount.js","Components/Navigation.js","Components/Trail.js","StyledComponents/TrailsContainer.js","Containers/Trails.js","Components/Map.js","Containers/TrailShow.js","Components/TrailSearch.js","Containers/MyHikes.js","Components/Landing.js","Components/About.js","App.js","serviceWorker.js","Reducers/userreducer.js","Reducers/trailSearchReducer.js","Reducers/trailShowReducer.js","Reducers/myHikesReducer.js","Reducers/formReducer.js","index.js"],"names":["showError","error","alert","message","getCoordinates","setLocation","navigator","geolocation","getCurrentPosition","enableHighAccuracy","timeout","FlashMessage","this","setTimer","_timer","clearTimeout","setTimeout","props","unmount","bind","className","Component","FormWrapper","styled","div","connect","state","currentUserData","user","form","username","password","passwordConfirmation","email","messages","flashMessage","dispatch","setUser","type","payload","coords","setFlashMessage","unmountFlashMessage","handleChange","e","target","name","value","useForm","handleSubmit","register","errors","handleSignup","a","options","method","url","data","password_confirmation","axios","resp","localStorage","userId","id","map","key","Card","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","defaultValue","ref","required","render","pattern","validate","Button","variant","block","to","logged_in","getFormData","getUserData","getTrailSearchData","trailSearch","useSelector","handleLogin","useState","setUsername","setEmail","setAlert","setMessage","window","handleUpdate","event","preventDefault","userParams","handleOnChange","targetName","setFormState","CancelAccountModal","show","setShow","handleClose","useEffect","Modal","onHide","Header","closeButton","Title","Body","Footer","onClick","handleCancelAccount","IconRow","IconContainer","withRouter","clearUser","showModal","setShowModal","clear","delete","history","push","NavWrapper","NavbarBrand","Navbar","Brand","BrandImage","img","latitude","longitude","handleLogout","post","bg","expand","fixed","collapseOnSelect","Nav","Link","as","eventKey","src","process","alt","loading","Toggle","aria-controls","Collapse","TrailDiv","TrailImage","TrailInfo","Trail","spans","setSpans","imageRef","useRef","current","addEventListener","setRowSpans","console","log","height","clientHeight","rowSpan","Math","ceil","encodeURIComponent","trailName","style","gridRowEnd","image","location","TrailsContainer","Trails","renderTrails","trails","trail","imgMedium","length","difficulty","trail_ids","split","setTrails","setPreviousPage","Spinner","animation","role","PureComponent","Map","center","lat","parseFloat","lng","zoom","directions","handleDirections","google","origin","destination","directionsService","maps","DirectionsService","directionsDisplay","DirectionsRenderer","setMap","route","travelMode","DirectionsResult","DirectionsStatus","setDirections","setState","replace","bootstrapURLKeys","defaultZoom","onGoogleApiLoaded","yesIWantToUseGoogleMapApiInternals","trailShow","TrailShowContainer","ButtonContainer","InfoContainer","TrailShow","inHikes","trailSet","addTrailToHikes","params","match","user_id","trail_name","slug","status","removeTrailFromHikes","renderFlashMessage","backToPreviousPage","get","then","setHikes","hikes","setTrail","find","hike","fromSearchPage","Figure","Image","Caption","myHikes","TrailSearch","loaded","setLoaded","setLoading","useDispatch","distance","mileage","associateUserTrails","queryURL","handleSearch","getMyHikes","renderHikes","fadeInBottom","keyframes","JumbotronMod","Jumbotron","h1","Landing","AboutContainer","Description","p","AboutImage","About","AppContainer","RouterWrapper","AppBody","footer","App","checkedLogin","setCheckedLogin","withCredentials","getItem","checkUserLogin","exact","path","component","href","Boolean","hostname","defaultState","userReducer","prevState","action","coordinates","trailSearchReducer","fieldKey","Object","keys","removeItem","pathname","slice","myHikesReducer","formReducer","inputField","rootReducer","combineReducers","trailShowReducer","store","createStore","defaults","xsrfCookieName","xsrfHeaderName","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2e72ad27.chunk.js","sourcesContent":["const getCoordinates = (setLocation) => {\n    navigator.geolocation.getCurrentPosition(setLocation, showError, {enableHighAccuracy: true, timeout: 5000});\n};\n\nconst showError = (error) => {\n    alert(error.message);\n};\n\nexport default getCoordinates;","import React, { Component } from 'react';\n\nclass FlashMessage extends Component {\n\n    componentDidMount() {\n        this.setTimer();\n    };\n\n    setTimer() {\n        if (this._timer != null) {\n            clearTimeout(this._timer)\n        }\n\n        this._timer = setTimeout(function () {\n            this.props.unmount();\n            this._timer = null;\n        }.bind(this), 4000);\n    };\n\n    componentWillUnmount() {\n        clearTimeout(this._timer);\n    };\n\n    render () {\n        return (\n            <div className={`flash-message alert ${this.props.alert}`} >\n                <p className=\"small\">{this.props.message}</p>\n            </div>\n        );\n    };\n};\n\nexport default FlashMessage;","import styled from 'styled-components';\n\nexport const FormWrapper = styled.div`\n    .form-card {\n        width: 25rem;\n        padding: 1rem;\n    }\n    form {\n        width: 100%;\n    }\n    .flash-container {\n        position: relative;\n    }\n    .form-flash {\n        position: absolute;\n    }\n    .subtext {\n        font-family: Source Sans Pro, sans-serif;\n    }\n    .headline {\n        font-family: Amatic SC, cursive;\n    }\n    .btn-success {\n        background: #a7a7a7;\n        border-color: #8c8c8c;\n        &:hover {\n            background: #848383;\n        }\n    }\n`;","import { connect } from 'react-redux';\nimport React from \"react\";\nimport { Form, Button, Card } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { Link, Redirect } from 'react-router-dom';\nimport getCoordinates from '../Scripts/getCoordinates';\nimport FlashMessage from '../Components/FlashMessage';\nimport axios from 'axios';\nimport { FormWrapper } from '../StyledComponents/FormWrapper';\n\nconst Signup = (props) => {\n    const {\n        currentUserData,\n        username,\n        password,\n        passwordConfirmation,\n        email,\n        messages,\n        alert,\n        flashMessage,\n        setUser,\n        setLocation,\n        setFlashMessage,\n        unmountFlashMessage,\n        handleChange\n    } = props;\n\n    const { handleSubmit, register, errors } = useForm();\n\n    const handleSignup = async () => {\n        const userParams = {\n            \"user\": {\n                username: username,\n                password: password,\n                password_confirmation: passwordConfirmation,\n                email: email\n            }\n        };\n\n        const options = {\n            method: 'post',\n            url: 'https://nameless-wave-57808.herokuapp.com/api/v1/signup',\n            data: userParams\n        };\n\n        const resp = await axios(options);\n\n        const { errors, user } = resp.data;\n        const { data } = resp;\n\n        if (!errors) {\n            setUser(data);\n            getCoordinates(setLocation);\n            localStorage.userId = user.id;\n        } else {\n            setFlashMessage(errors);\n        }\n    };\n\n    const renderFlashMessages = () => {\n        return messages.map((message) => {\n            return <FlashMessage\n                        key={message[0]}\n                        unmount={unmountFlashMessage}\n                        message={message}\n                        alert={alert}\n                        className=\"subtext form-flash\"\n                    />\n        })\n    }\n\n    return (\n        <FormWrapper>\n            <div className=\"flash-container\">\n                {\n                    flashMessage\n                        ? renderFlashMessages()\n                        : <div className=\"form-flash\"></div>\n                }\n            </div>\n            <Card className=\"form-card\">\n                <Form onSubmit={handleSubmit(handleSignup)}>\n                    <Form.Group controlId=\"username\">\n                        <Form.Label className=\"headline\">Username</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter username\"\n                            onChange={handleChange}\n                            defaultValue={username}\n                            name=\"username\"\n                            className=\"subtext\"\n                            ref={register({\n                                required: \"Username cannot be blank\"\n                            })}\n                        />\n                        <ErrorMessage\n                            errors={errors}\n                            name=\"username\"\n                            render={({ message }) => <p className=\"alert-danger flash-message subtext\">{message}</p>}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label className=\"headline\">Email address</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter email\"\n                            onChange={handleChange}\n                            defaultValue={email}\n                            name=\"email\"\n                            className=\"subtext\"\n                            ref={register({\n                                required: \"Email cannot be blank\",\n                                pattern: {\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                    message: \"Invalid email address\"\n                                }\n                            })}\n                        />\n                        <ErrorMessage\n                            errors={errors}\n                            name=\"email\"\n                            render={({ message }) => <p className=\"alert-danger flash-message subtext\">{message}</p>}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupPassword\">\n                        <Form.Label className=\"headline\">Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            onChange={handleChange}\n                            defaultValue={password}\n                            name=\"password\"\n                            className=\"subtext\"\n                            ref={register({\n                                required: \"Password cannot be blank\",\n                                pattern: {\n                                    value: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/,\n                                    message: \"Password must be between 6 and 20 characters and contain at least one numeric digit, one uppercase and one lowercase letter\"\n                                }\n                            })}\n                        />\n                        <ErrorMessage\n                            errors={errors}\n                            name=\"password\"\n                            render={({ message }) => <p className=\"alert-danger flash-message subtext\">{message}</p>}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupPasswordConfirmation\">\n                        <Form.Label className=\"headline\">Password Confirmation</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            placeholder=\"Password Confirmation\"\n                            onChange={handleChange}\n                            defaultValue={passwordConfirmation}\n                            name=\"passwordConfirmation\"\n                            className=\"subtext\"\n                            ref={register({\n                                required: \"Password confirmation cannot be blank\",\n                                validate: (value) => value === password || \"Passwords must match\"\n                            })}\n                        />\n                        <ErrorMessage\n                            errors={errors}\n                            name=\"passwordConfirmation\"\n                            render={({ message }) => <p className=\"alert-danger flash-message subtext\">{message}</p>}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupSubmit\" className=\"small headline\">\n                        <Button variant=\"success\" type=\"submit\" block>Submit</Button>\n                    </Form.Group>\n                    <Form.Group className=\"small subtext\">\n                        Already have an account?  <Link to=\"/login\">Login</Link>\n                    </Form.Group>\n                </Form>\n            </Card>\n            {\n                currentUserData && currentUserData.logged_in\n                    && <Redirect to='/trailsearch' />\n            }\n        </FormWrapper>\n    );\n};\n\n\nfunction msp(state) {\n    const { \n        currentUserData\n    } = state.user;\n\n    const {\n        username,\n        password,\n        passwordConfirmation,\n        email,\n        messages,\n        alert,\n        flashMessage\n    } = state.form;\n\n    return {\n        currentUserData,\n        username,\n        password,\n        passwordConfirmation,\n        email,\n        messages,\n        alert,\n        flashMessage\n    };\n};\n\nfunction mdp(dispatch) {\n    return {\n        setUser: (user) => {\n            dispatch({\n                type: \"SET_USER\",\n                payload: user\n            })\n        },\n        setLocation: (coords) => {\n            dispatch({\n                type: \"SET_LOCATION\",\n                payload: coords\n            })\n        },\n        setFlashMessage: (messages) => {\n            dispatch({\n                type: \"SET_FLASH_MESSAGE\",\n                payload: {\n                    alert: \"alert-danger\",\n                    messages: messages\n                }\n            })\n        },\n        unmountFlashMessage: () => {\n            dispatch({\n                type: \"UNMOUNT_FLASH_MESSAGE\"\n            })\n        },\n        handleChange: (e) => {\n            dispatch({\n                type: \"HANDLE_CHANGE\",\n                payload: { [e.target.name]: e.target.value }\n            })\n        }\n    };\n};\n\nexport default connect(msp, mdp)(Signup);","export const getFormData = (state) => {\n  return state.form;\n}\n\nexport const getUserData = (state) => {\n  return state.user;\n}\n\nexport const getTrailSearchData = (state) => {\n  return state.trailSearch;\n}","import { connect, useSelector } from 'react-redux';\nimport React from 'react';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from '@hookform/error-message';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport getCoordinates from '../Scripts/getCoordinates';\nimport FlashMessage from '../Components/FlashMessage';\nimport { FormWrapper } from '../StyledComponents/FormWrapper';\nimport { getFormData } from '../Selectors/selectors';\n\nconst Login = (props) => {\n    const {\n        username,\n        password,\n        messages,\n        alert,\n        flashMessage\n    } = useSelector(getFormData);\n\n    const {\n        currentUserData,\n        setUser,\n        setLocation,\n        setFlashMessage,\n        unmountFlashMessage,\n        handleChange\n    } = props;\n\n    const { handleSubmit, register, errors } = useForm();\n\n    const handleLogin = async () => {\n        const userParams = {\n            \"user\": {\n                username: username,\n                password: password\n            }\n        };\n\n        const options = {\n            method: 'post',\n            url: 'https://nameless-wave-57808.herokuapp.com/api/v1/login',\n            data: userParams\n        };\n\n        const resp = await axios(options);\n\n        const { errors, user } = resp.data; \n        const { data } = resp;\n\n        if (!errors) {\n            setUser(data);\n            getCoordinates(setLocation);\n            localStorage.userId = user.id;\n        } else {\n            setFlashMessage(errors);\n        }\n    };\n\n    const renderFlashMessages = () => {\n        return messages.map((message) => {\n            return <FlashMessage\n                        key={message[0]}\n                        unmount={unmountFlashMessage}\n                        message={message}\n                        alert={alert}\n                        className=\"subtext form-flash\"\n                    />\n        })\n    }\n\n    return (\n        <FormWrapper>\n            <div className=\"flash-container\">\n                {\n                    flashMessage\n                        ? renderFlashMessages()\n                        : <div className=\"form-flash\"></div>\n                }\n            </div>\n            <Card className=\"form-card\">\n                <Form onSubmit={handleSubmit(handleLogin)}>\n                    <Form.Group controlId=\"username\">\n                        <Form.Label className=\"headline\">Username</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter username\"\n                            onChange={handleChange}\n                            name=\"username\"\n                            defaultValue={username}\n                            className=\"subtext\"\n                            ref={register({\n                                required: \"Username cannot be blank\"\n                            })}\n                        />\n                        <ErrorMessage\n                            errors={errors}\n                            name=\"username\"\n                            render={({ message }) => <p className=\"alert-danger flash-message subtext\">{message}</p>}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupPassword\">\n                        <Form.Label className=\"headline\">Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            onChange={handleChange}\n                            name=\"password\"\n                            defaultValue={password}\n                            className=\"subtext\"\n                            ref={register({\n                                required: \"Password cannot be blank\"\n                            })}\n                        />\n                        <ErrorMessage\n                            errors={errors}\n                            name=\"password\"\n                            render={({ message }) => <p className=\"alert-danger flash-message subtext\">{message}</p>}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupSubmit\" className=\"small headline\">\n                        <Button variant=\"success\" type=\"submit\" block>Submit</Button>\n                    </Form.Group>\n                    <Form.Group className=\"small subtext\">\n                        Don't have an account?  <Link to=\"/signup\">Signup</Link>\n                    </Form.Group>\n                </Form>\n            </Card>\n            \n            {\n                currentUserData && currentUserData.logged_in\n                    ? <Redirect to='/trailsearch' />\n                    : null\n            }\n        </FormWrapper>\n    );\n};\n\n\nfunction msp(state) {\n    const { \n        currentUserData\n    } = state.user;\n\n\n    return {\n        currentUserData\n    };\n};\n\nfunction mdp(dispatch) {\n    return {\n        setUser: (user) => {\n            dispatch({ \n                type: \"SET_USER\", \n                payload: user \n            })\n        },\n        setLocation: (coords) => {\n            dispatch({\n                type: \"SET_LOCATION\",\n                payload: coords\n            })\n        },\n        setFlashMessage: (messages) => {\n            dispatch({\n                type: \"SET_FLASH_MESSAGE\",\n                payload: {\n                    alert: \"alert-danger\",\n                    messages: messages\n                }\n            })\n        },\n        unmountFlashMessage: () => {\n            dispatch({\n                type: \"UNMOUNT_FLASH_MESSAGE\"\n            })\n        },\n        handleChange: (e) => {\n            dispatch({\n                type: \"HANDLE_CHANGE\",\n                payload: { [e.target.name]: e.target.value }\n            })\n        }\n    };\n};\n\nexport default connect(msp, mdp)(Login);","import React, { useState } from 'react';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport FlashMessage from './FlashMessage';\nimport { FormWrapper } from '../StyledComponents/FormWrapper';\n\nconst UpdateAccount = (props) => {\n    const { user } = props.currentUserData;\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [flashMessage, setFlashMessage] = useState(false);\n    const [alert, setAlert] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n    window.setUsername = setUsername;\n    window.setEmail = setEmail;\n\n    const handleUpdate = async (event) => {\n        event.preventDefault();\n\n        const userParams = {\n            \"user\": {\n                username: username || user.username,\n                email: email || user.email\n            }\n        };\n\n        const options = {\n            method: 'patch',\n            url: 'https://nameless-wave-57808.herokuapp.com/api/v1/update_account',\n            data: userParams\n        };\n\n        const resp = await axios(options);\n\n        if (!resp.data.error) {\n            setFlashMessage(true);\n            setMessage(resp.data.message);\n            setAlert(\"alert-success\");\n        } else {\n            setFlashMessage(true);\n            setMessage(resp.data.message);\n            setAlert(\"alert-danger\");\n        }\n    };\n\n    const handleOnChange = (e) => {\n        const targetName = e.target.name;\n        const setFormState = window[`set${targetName}`];\n\n        setFormState(e.target.value);\n    };\n\n    const unmountFlashMessage = () => {\n        setFlashMessage(false);\n        setMessage(\"\");\n    };\n\n    return (\n        <FormWrapper>\n            <Card className=\"form-card\">\n                <Form onSubmit={handleUpdate} >\n                    <Form.Group>\n                        {\n                            flashMessage\n                                ?   <FlashMessage\n                                        unmount={unmountFlashMessage}\n                                        message={message}\n                                        alert={alert}\n                                        className=\"subtext\"\n                                    />\n                                :   <span />\n                        }\n                    </Form.Group>\n                    <Form.Group controlId=\"username\">\n                        <Form.Label className=\"headline\">Update username</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder={`${user?.username}`}\n                            onChange={handleOnChange}\n                            name=\"Username\"\n                            className=\"subtext\"\n                            value={username}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label className=\"headline\">Update email address</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder={`${user?.email}`}\n                            onChange={handleOnChange}\n                            name=\"Email\"\n                            className=\"subtext\"\n                            value={email}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupSubmit\" className=\"small headline\">\n                        <Button variant=\"success\" type=\"submit\" block>Submit</Button>\n                    </Form.Group>\n                </Form>\n            </Card>\n        </FormWrapper>\n    )\n};\n\nfunction msp(state) {\n    const { currentUserData } = state.user;\n\n    return {\n        currentUserData\n    };\n};\n\nexport default connect(msp, null)(UpdateAccount);","import React, { Fragment, useEffect, useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nconst CancelAccountModal = (props) => {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        handleShow();\n    }, []);\n\n    const onClick = () => {\n        props.handleCancelAccount();\n        handleClose();\n    };\n\n    return (\n        <Fragment>\n            <Modal show={ show } onHide={ handleClose }>\n                <Modal.Header closeButton>\n                    <Modal.Title>Cancel Account</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"subtext\">{ props.message }</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" className=\"headline\" onClick={ handleClose }>\n                        No\n                        </Button>\n                    <Button variant=\"primary\" className=\"headline\" onClick={ onClick }>\n                        Yes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Fragment>\n    );\n};\n\nexport default CancelAccountModal;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport CancelAccountModal from './CancelAccountModal';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst IconRow = styled.div`\n    display: flex;\n    a:link, a:visited {\n        color:  #1c1b1be1;\n    }\n    a:hover {\n        color:  #7d7a7ae1;\n    }\n    .headline {\n        font-family: 'Amatic SC', cursive;\n    }\n    .marginal {\n        margin: 2%;\n    }\n    .button-sized {\n        font-size: 1.2em;\n    }\n`;\n\nconst IconContainer = styled.div`\n    margin: 0 8rem;\n\n    @media screen and (max-width: 1000px) {\n        margin 0 2rem;\n    }\n`;\n\nconst ManageAccount = (props) => {\n    const [showModal, setShowModal] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const renderCancelModel = () => {\n        setMessage(\"Are you sure you want to cancel your account?\")\n        setShowModal(true);\n    }\n\n    const handleCancelAccount = async () => {\n        localStorage.clear();\n        props.clearUser();\n        \n        const resp = await axios.delete('https://nameless-wave-57808.herokuapp.com/api/v1/cancel_account');\n\n        if (!resp.errors) {\n            props.history.push('/');\n        }\n    }\n\n    return (\n        <>\n            {\n                showModal\n                    ?   <CancelAccountModal \n                            handleCancelAccount={ handleCancelAccount }\n                            message={ message }\n                        />\n                    :   null\n            }\n            <IconRow>\n                <IconContainer>\n                    <Link to=\"/update-account\" className=\"headline\">\n                        <i className=\"fas fa-edit fa-3x marginal\"></i>\n                        <p className=\"button-sized\">Update Account</p>\n                    </Link>\n                </IconContainer>\n                <IconContainer>\n                    <Link to=\"#\" onClick={ renderCancelModel } className=\"headline\">\n                        <i className=\"fas fa-ban fa-3x marginal\"></i>\n                        <p className=\"button-sized\">Cancel Account</p>\n                    </Link>\n                </IconContainer>\n            </IconRow>\n        </>\n    );\n};\n\nfunction mdp(dispatch) {\n    return {\n        clearUser: () => {\n            dispatch({\n                type: \"CLEAR_USER\"\n            })\n        }\n    };\n};\n\nexport default withRouter(connect(null, mdp)(ManageAccount));","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst NavWrapper = styled.div`\n    .navbar-link {\n        text-decoration: none;\n    }\n    .navbar-dark .navbar-nav .nav-link {\n        color: white;\n        transition: .3s;\n    }\n    a {\n        margin: 0 1em;\n    }\n`;\n\nconst NavbarBrand = styled(Navbar.Brand)`\n    font-size: 1.7em;\n    font-weight: 700;\n    font-family: Balsamiq Sans, cursive;\n`;\n\nconst BrandImage = styled.img`\n    height: 50px;\n    width: 50px;\n`;\n\n\nconst Navigation = (props) => {\n    const handleLogout = async () => {\n        localStorage.clear();\n\n        const resp = await axios.post('https://nameless-wave-57808.herokuapp.com/api/v1/logout');\n\n        if (resp.errors) {\n            alert(resp.errors)\n        } else {\n            props.clearUser();\n        }\n    };\n\n    return (\n        <NavWrapper>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\" collapseOnSelect>\n                <Nav.Link as={Link} eventKey=\"1\" to=\"/\">\n                    <NavbarBrand>\n                        <BrandImage src={process.env.PUBLIC_URL + \"/noun_Trail_2056927.svg\"} alt=\"brand\" loading=\"lazy\" />   Trailblaze\n                    </NavbarBrand>\n                </Nav.Link>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n                        {\n                            props.currentUserData.logged_in\n                                ?\n                                <>\n                                    <Nav.Link as={Link} eventKey=\"2\" to=\"/trailsearch\">Find a Trail</Nav.Link>\n                                    <Nav.Link as={Link} eventKey=\"3\" to=\"/myhikes\">My Hikes</Nav.Link>\n                                    <Nav.Link as={Link} eventKey=\"4\" to=\"/account\">Account</Nav.Link>\n                                    <Nav.Link as={Link} eventKey=\"5\" to=\"/\" onClick={handleLogout}>Logout {props.currentUserData.user.username}</Nav.Link>\n                                </>\n                                :\n                                <>\n                                    <Nav.Link as={Link} eventKey=\"6\" to=\"/signup\">Signup</Nav.Link>\n                                    <Nav.Link as={Link} eventKey=\"7\" to=\"/login\">Login</Nav.Link>\n                                </>\n                        }\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </NavWrapper>\n        \n    );\n};\n\nfunction msp(state) {\n    const { \n        currentUserData,\n        latitude,\n        longitude\n    } = state.user;\n\n    return {\n        currentUserData,\n        latitude,\n        longitude\n    };\n};\n\nfunction mdp(dispatch) {\n    return {\n        clearUser: () => {\n            dispatch({\n                type: \"CLEAR_USER\"\n            })\n        }\n    };\n};\n\nexport default connect(msp, mdp)(Navigation);","import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst TrailDiv = styled.div`\n    position: relative;\n    display: inline-block;\n`;\n\nconst TrailImage = styled.img`\n    width: 100%;\n    vertical-align: top;\n`;\n\nconst TrailInfo = styled.div`\n    position: absolute;\n    top: 2em;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    color: white;\n    & .headline {\n        font-size: .9em;\n        font-family: Amatic SC, cursive;\n    }\n    & .subtext {\n        font-family: 'Source Sans Pro', sans-serif;\n        font-size: .6em;\n    }\n`;\n\nconst Trail = (props) => { \n    const [spans, setSpans] = useState(0);\n\n    const imageRef = useRef(null);\n\n    useEffect(() => {\n        try {\n            imageRef.current.addEventListener(\"load\", setRowSpans);\n        } catch (e) {\n            console.log(e);\n        }\n    }, []);\n\n    const setRowSpans = () => {\n        const height = imageRef.current.clientHeight;\n        const rowSpan = Math.ceil(height / 10);\n        setSpans(rowSpan); \n    };\n\n    return (\n        <Link to={`/trails/${encodeURIComponent(props.trailName)}`} style={{ gridRowEnd: `span ${spans}` }} >\n            <TrailDiv className=\"trail\" >\n                <TrailImage src={ props.image } ref={ imageRef } alt={ props.trailName } />\n                {\n                    <TrailInfo>\n                        <p className=\"headline\"><strong>{ props.trailName }</strong></p>\n                        <p className=\"subtext\">{ props.location }</p>\n                    </TrailInfo>\n                }\n                    \n                \n            </TrailDiv>\n        </Link >\n    );\n};\n\nexport default Trail; ","import styled from 'styled-components';\n\nexport const TrailsContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    grid-gap: 0 10px;\n    grid-auto-rows: 10.1px;\n    width: 100%;\n    margin-bottom: 1rem;\n`;","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { Spinner } from 'react-bootstrap';\nimport Trail from '../Components/Trail';\nimport axios from 'axios';\nimport { TrailsContainer } from '../StyledComponents/TrailsContainer';\n\nclass Trails extends PureComponent {\n\n    async componentDidMount() {\n        if (!this.props.trails.length) {\n            const options = {\n                method: 'post',\n                url: 'https://nameless-wave-57808.herokuapp.com/api/v1/search_reload',\n                data: { trail_ids: localStorage.trails?.split(',').map(id => id) }\n            };\n\n            const resp = await axios(options);\n\n            const { trails } = resp.data;\n            const { setTrails } = this.props;\n            \n            setTrails(trails);\n        }\n    };\n\n    renderTrails = () => {\n        const { trails } = this.props;\n        \n        return trails.map(trail => {\n            return <Trail \n                        key = { trail.id }\n                        trailName = { trail.name }\n                        image = { trail.imgMedium }\n                        length = { trail.length }\n                        difficulty = { trail.difficulty }\n                        location = { trail.location }\n                    />;\n        });\n    };\n\n    render() {\n        const { trails, setPreviousPage, location } = this.props;\n        const { renderTrails } = this;\n\n        setPreviousPage(location);\n\n        return (\n            <>\n                {\n                    trails.length\n                        ?\n                            <TrailsContainer>\n                                { renderTrails() }\n                            </TrailsContainer>\n                        :\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"sr-only\">Searching for trails</span>\n                            </Spinner>\n                }\n            </>\n        );\n    };\n};\n\nfunction msp(state) {\n\n    const {\n        latitude,\n        longitude\n    } = state.user;\n\n    const {\n        trails\n    } = state.trailSearch;\n\n    return {\n        latitude,\n        longitude,\n        trails\n    };\n};\n\nfunction mdp(dispatch) {\n    return {\n        setTrails: (trails) => {\n            dispatch({\n                type: \"SET_TRAILS\",\n                payload: trails\n            })\n        },\n        setPreviousPage: (location) => {\n            dispatch({\n                type: \"SET_PREVIOUS_PAGE\",\n                payload: location\n            })\n        }\n    }\n}\n\nexport default withRouter(connect(msp, mdp)(Trails));","import React, { PureComponent } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nclass Map extends PureComponent {\n\n    state = {\n        center: {\n            lat: parseFloat(this.props.trail.latitude),\n            lng: parseFloat(this.props.trail.longitude)\n        },\n        zoom: 11,\n        key: \"\",\n        directions: null\n    };\n\n    async componentDidMount() {\n        const resp = await axios('https://nameless-wave-57808.herokuapp.com/api/v1/map_auth');\n\n        this.setState({\n            key: resp.data.key.replace(/\\s/g, \"\")\n        });\n    };\n\n    handleDirections = (google) => {\n        const origin = { lat: parseFloat(localStorage.latitude), lng: parseFloat(localStorage.longitude) };\n        const destination = { lat: this.state.center.lat, lng: this.state.center.lng };\n\n        let directionsService = new google.maps.DirectionsService();\n        let directionsDisplay = new google.maps.DirectionsRenderer();\n        directionsDisplay.setMap(google.map);\n\n        directionsService.route(\n            {\n                travelMode: 'DRIVING',\n                origin: origin,\n                destination: destination\n            },\n            (DirectionsResult, DirectionsStatus) => {\n                if (DirectionsStatus === 'OK') {\n                    directionsDisplay.setDirections(DirectionsResult);\n                }\n            }\n        )\n    };\n\n    render() {\n\n        const { \n            key, \n            center,\n            zoom\n        } = this.state;\n\n        return (\n            <div className=\"map\" >\n                {\n                    key\n                    ?\n                    <GoogleMapReact\n                        bootstrapURLKeys={{ key: key }}\n                        center={ center }\n                        defaultZoom={ zoom }\n                        onGoogleApiLoaded={this.handleDirections}\n                        yesIWantToUseGoogleMapApiInternals\n                    >\n                    </GoogleMapReact>\n                    :\n                    null\n                }\n            </div>\n        );\n    };\n};\n\nfunction msp(state) {\n    const {\n        trail\n    } = state.trailShow;\n\n    return {\n        trail\n    };\n};\n\nexport default connect(msp, null)(Map);","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\n//  Components\nimport FlashMessage from '../Components/FlashMessage';\nimport { Button, Figure } from 'react-bootstrap';\nimport Map from '../Components/Map';\nimport { withRouter } from 'react-router';\n\nconst TrailShowContainer = styled.div`\n    width: 100%;\n`;\n\nconst ButtonContainer = styled.div`\n    margin-bottom: 1vh;\n    & > * {\n        margin: 0 .5%;\n    }\n    & .flash-message {\n        font-size: .6em;\n        display: block;\n        color: rgba(91, 87, 87, 0.544);\n    }\n    & .btn-link {\n        margin: .5%;\n    }\n`;\n\nconst InfoContainer = styled.div`\n    padding-left: 1%;\n    padding-right: 1%;\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    & .trail {\n        flex: 0 450px;\n    }\n    & .trail img {\n        max-height: 45vh;\n    }\n    & .map {\n        height: 65vh;\n        flex: 1 1 450px;\n    }\n`;\n\nclass TrailShow extends PureComponent {\n    state = {\n        inHikes: false,\n        trailSet: false\n    };\n\n    async componentDidMount() {\n        await axios.get('https://nameless-wave-57808.herokuapp.com/api/v1/my_hikes')\n            .then(resp => {\n                this.props.setHikes(resp.data.hikes);\n            });\n\n        const { match: { params }, setTrail, hikes } = this.props;\n\n        axios.get(`https://nameless-wave-57808.herokuapp.com/api/v1/trails/${params.slug}`)\n            .then(resp => {\n                const trail = resp.data.trail;\n                setTrail(trail);\n\n                this.setState({\n                    trailSet: true\n                });\n\n                if (!!hikes.find(hike => hike.id === trail.id)) {\n                    this.setState({\n                        inHikes: true\n                    });\n                }\n            });\n    };\n\n    addTrailToHikes = async () => {\n        const { match: { params }, currentUserData } = this.props;\n        \n        const resp = await axios.post('https://nameless-wave-57808.herokuapp.com/api/v1/my_hikes/add_hike', {\n            user_id: currentUserData.user.id,\n            trail_name: params.slug\n        });\n\n        const { trail, error, status } = resp.data;\n        const { setFlashMessage } = this.props;\n        \n        if (status === 'success') {\n            const alert = \"alert-success\";\n            const message = `${trail} added to favorites`;\n            \n            setFlashMessage([message], alert);\n            \n            this.setState({\n                inHikes: true\n            });\n        } else {\n            const alert = \"alert-danger\";\n            const message = `${error}`;\n            \n            setFlashMessage([message], alert);\n        }\n    };\n\n    removeTrailFromHikes = async () => {\n        const resp = await axios.delete(`https://nameless-wave-57808.herokuapp.com/api/v1/my_hikes/delete_hike/${this.props.trail.id}`);\n\n        const { error } = resp.data;\n        const { trail, setFlashMessage } = this.props;\n        \n        if (!error) {\n            const alert = \"alert-success\";\n            const message = `${trail.name} removed from your hikes`;\n\n            setFlashMessage([message], alert);\n\n            this.setState({\n                inHikes: false\n            })\n        } else {\n            const alert = \"alert-danger\";\n            const message = `${error}`;\n\n            setFlashMessage([message], alert);\n        }\n    };\n\n    renderFlashMessage = () => {\n        const { messages, alert, unmountFlashMessage } = this.props;\n\n        return messages.map((message) => {\n            return <FlashMessage\n                        key={message[0]}\n                        unmount={unmountFlashMessage}\n                        message={message}\n                        alert={alert}\n                        className=\"subtext form-flash\"\n                    />\n        })\n    }\n\n    backToPreviousPage = () => {\n\n    };\n\n    render() {\n\n        const { trail, flashMessage, fromSearchPage } = this.props;\n        const { inHikes, trailSet } = this.state;\n        const { addTrailToHikes, removeTrailFromHikes, renderFlashMessage } = this;\n\n        return (\n            trail \n                ?\n                <TrailShowContainer>\n                    <ButtonContainer className=\"d-flex\">\n                        {\n                            fromSearchPage\n                                ? <Button variant=\"link\" className=\"headline\"><Link to={\"/trails\"}>Back to search</Link></Button>\n                                : <Button variant=\"link\" className=\"headline\"><Link to={\"/myhikes\"}>Back to hikes</Link></Button>\n                        }           \n                        {\n                            inHikes\n                                ? <Button variant=\"link\" onClick={removeTrailFromHikes} className=\"headline\">Remove from favorite hikes</Button>\n                                : <Button variant=\"link\" onClick={addTrailToHikes} className=\"headline\">Add to favorite hikes</Button>\n                        }\n                        {\n                            flashMessage\n                                ? renderFlashMessage()\n                                : <span />\n                        }\n                    </ButtonContainer>\n                    <InfoContainer>\n                        <Figure className=\"trail\">\n                            <Figure.Image\n                                src={trail.imgMedium}\n                            />\n                            <Figure.Caption className=\"headline\">{trail.name}</Figure.Caption>\n                            <Figure.Caption className=\"subtext small\">Length: {trail.length} miles</Figure.Caption>\n                            <Figure.Caption className=\"subtext small\">Difficulty: {trail.difficulty}</Figure.Caption>\n                            <Figure.Caption className=\"subtext small\">Location: {trail.location}</Figure.Caption>\n                        </Figure>\n                        {\n                            trailSet\n                                ? <Map></Map>\n                                : null\n                        }\n                        \n                    </InfoContainer>\n                </TrailShowContainer>\n                : null\n        );\n    };\n};\n\nfunction msp(state) {\n    const {\n        currentUserData\n    } = state.user;\n\n    const {\n        trail,\n        fromSearchPage\n    } = state.trailShow;\n\n    const {\n        hikes\n    } = state.myHikes;\n\n    const {\n        messages,\n        alert,\n        flashMessage\n    } = state.form;\n\n    return {\n        currentUserData,\n        trail,\n        hikes,\n        messages,\n        alert,\n        flashMessage,\n        fromSearchPage\n    };\n};\n\nfunction mdp(dispatch) {\n    return {\n        setTrail: (trail) => {\n            dispatch({\n                type: \"SET_TRAIL\",\n                payload: trail\n            })\n        },\n        setHikes: (hikes) => {\n            dispatch({\n                type: \"SET_HIKES\",\n                payload: hikes\n            })\n        },\n        setFlashMessage: (messages, alert) => {\n            dispatch({\n                type: \"SET_FLASH_MESSAGE\",\n                payload: {\n                    alert: alert,\n                    messages: messages\n                }\n            })\n        },\n        unmountFlashMessage: () => {\n            dispatch({\n                type: \"UNMOUNT_FLASH_MESSAGE\"\n            })\n        }\n    };\n};\n\nexport default withRouter(connect(msp, mdp)(TrailShow)); ","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Button, Spinner, Card } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { FormWrapper } from '../StyledComponents/FormWrapper';\nimport { getUserData, getTrailSearchData } from '../Selectors/selectors';\n\nconst TrailSearch = () => {\n    const [loaded, setLoaded] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const dispatch = useDispatch();\n    const {latitude, longitude} = useSelector(getUserData);\n    const {distance, mileage} = useSelector(getTrailSearchData);\n\n    useEffect(() => {\n        associateUserTrails();\n    }, [latitude]);\n\n    const associateUserTrails = async () => {\n        try {\n            // Make proxy request to Hiking Project API through server to avoid CORS issue. \n            const queryURL = `http://www.hikingproject.com/data/get-trails?lat=${latitude}&lon=${longitude}&maxDistance=${distance}&maxResults=300&key=200492212-d7400571b0620563169df18724f8dc46`;\n\n            const options = {\n                method: 'post',\n                url: 'https://nameless-wave-57808.herokuapp.com/api/v1/trails/associate_trails',\n                data: { url: queryURL }\n            };\n\n            setLoading(true);\n\n            const resp = await axios(options);\n            const { status } = resp.data;\n\n            if (status === \"Success\") {\n                setLoading(false);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    const handleSearch = async (e) => {\n        e.preventDefault();\n\n        const options = {\n            method: 'post',\n            url: 'https://nameless-wave-57808.herokuapp.com/api/v1/trails/search',\n            data: {\n                distance: distance,\n                mileage: mileage,\n                latitude: latitude,\n                longitude: longitude\n            }\n        };\n\n        console.log('options', options);\n\n        const resp = await axios(options);\n        const { trails } = resp.data;\n\n        console.log(trails);\n\n        dispatch({type: \"SET_TRAILS\", payload: trails});\n\n        setLoaded(true);\n    };\n\n    const handleChange = (e) => {\n        dispatch({\n            type: \"HANDLE_CHANGE\",\n            payload: { [e.target.name]: e.target.value },\n        });\n    }\n\n    return (\n        <FormWrapper>\n            {\n                latitude && longitude && !loading\n                    ?   <Card className=\"form-card\">\n                            <Form onSubmit={handleSearch}>\n                                <Form.Label className=\"headline\">How many miles are you willing to travel from your current location?</Form.Label>\n                                <Form.Group controlId=\"distance\">\n                                    <Form.Control\n                                        as=\"select\"\n                                        name=\"distance\"\n                                        value={distance}\n                                        onChange={handleChange}\n                                        className=\"subtext\"\n                                    >\n                                        <option>60</option>\n                                        <option>100</option>\n                                        <option>150</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Label className=\"headline\">How many miles do you want to hike?</Form.Label>\n                                <Form.Group controlId=\"mileage\">\n                                    <Form.Control\n                                        as=\"select\"\n                                        name=\"mileage\"\n                                        value={mileage}\n                                        onChange={handleChange}\n                                        className=\"subtext\"\n                                    >\n                                        <option>Less than 3</option>\n                                        <option>3 to 5</option>\n                                        <option>6 to 9</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId=\"formGroupSubmit\" className=\"headline\">\n                                    <Button variant=\"success\" type=\"submit\" block>Find Trails</Button>\n                                </Form.Group>\n                                { loaded && <Redirect to='/trails' /> }\n                            </Form>\n                        </Card>\n                    :   <>\n                            <Spinner animation=\"border\" role=\"status\"></Spinner>\n                            <p className=\"headline\">Processing location. If this is your first login it may take a minute...</p>\n                        </>\n            }\n        </FormWrapper>\n    );\n};\n\nexport default TrailSearch;\n\n","import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport Trail from '../Components/Trail';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { TrailsContainer } from '../StyledComponents/TrailsContainer';\n\nconst MyHikes = (props) => {\n    const { \n        setHikes, \n        setPreviousPage, \n        location \n    } = props;\n\n    setPreviousPage(location);\n\n    const getMyHikes = async () => {\n        const resp = await axios.get(\n            \"https://nameless-wave-57808.herokuapp.com/api/v1/my_hikes\"\n        );\n        setHikes(resp.data.hikes);\n    }\n\n    useEffect(() => {\n        getMyHikes();\n    }, []);\n\n    const renderHikes = () => {\n        return props.hikes?.map(hike => {\n            const {\n                id,\n                name,\n                length,\n                difficulty,\n                location,\n                imgMedium\n            } = hike;\n\n            return <Trail\n                        key={ id }\n                        trailName={ name }\n                        image={ imgMedium }\n                        length={ length }\n                        difficulty={ difficulty }\n                        location={ location }\n                    />;\n        });\n    };\n\n    return (\n        <TrailsContainer>\n            { renderHikes() }\n        </TrailsContainer>\n    );\n};\n\nfunction msp(state) {\n    const {\n        hikes\n    } = state.myHikes\n\n    return {\n        hikes\n    };\n};\n\nfunction mdp(dispatch) {\n    return {\n        setHikes: (hikes) => {\n            dispatch({\n                type: \"SET_HIKES\",\n                payload: hikes\n            })\n        },\n        setPreviousPage: (location) => {\n            dispatch({\n                type: \"SET_PREVIOUS_PAGE\",\n                payload: location\n            })\n        }\n    }\n}\n\nexport default withRouter(connect(msp, mdp)(MyHikes));","import React from 'react';\nimport { Jumbotron } from 'react-bootstrap';\nimport styled, { keyframes } from 'styled-components';\n\nconst fadeInBottom = keyframes`\n    0% {\n        opacity: 0;\n        transform: translateY(4rem);\n    }\n    80% {\n        opacity: .80;\n        transform: translateY(-1rem);\n    }\n    100% {\n        opacity: 1;\n    }\n`;\n\nconst JumbotronMod = styled(Jumbotron)`\n    color: white;\n    background-image: url(${process.env.PUBLIC_URL + '/trail.jpeg'});\n    background-position-y: -172rem;\n    background-position-x: -119rem;\n    height: 70vh;\n    padding-top: 13rem;\n    margin-bottom: 1rem;\n    @media screen and (max-width: 768px) {\n        background-position-y: -22rem;\n        background-position-x: -41rem;\n    }\n    @media screen and (min-width: 769px) and (max-width: 1000px) {\n        background-position-y: -22rem;\n        background-position-x: -26rem;\n    }\n`;\n\nconst Header = styled.h1`\n    font-family: Amatic SC, cursive;\n    font-size: 3.5rem;\n    width: 100vw;\n    letter-spacing: .7rem;\n    animation: 1.5s ${fadeInBottom} ease-out;\n    @media screen and (max-width: 768px) {\n        font-size: 2rem;\n    }\n`;\n\nconst Landing = () => {\n    return (\n        <JumbotronMod>\n            <Header>\n                Welcome to Trailblaze\n            </Header>\n        </JumbotronMod>\n    )\n}\n\nexport default Landing;","import React from 'react';\nimport styled from 'styled-components';\n\nconst AboutContainer = styled.div`\n  background: #f5f5f5;\n  color: #635d5d;\n  padding: 2rem 3rem;\n  display: flex;\n\n  @media screen and (max-width: 1000px) {\n    flex-direction: column-reverse;\n    margin: 1rem 0;\n  }\n`;\n\nconst Description = styled.p`\n  font-size: 1rem;\n  margin: 0 3rem;\n  width: auto;\n  padding: 3rem;\n\n  @media screen and (max-width: 1000px) {\n    padding: 1.5rem 0;\n  }\n`;\n\nconst AboutImage = styled.img`\n  width: 55%;\n\n  @media screen and (max-width: 1000px) {\n    width: 100%;\n  }\n`;\n\nconst About = () => {\n  return (\n    <AboutContainer>\n      <Description>\n        Trailblaze is a location based trail-finding application. Plug in how\n        far you're willing to travel and how many miles you'd like to hike and\n        choose from the results to get directions to the trailhead. You can also\n        save any trails that you've hiked and enjoyed or want to hike some other\n        time so you can pull them up easily in the future.\n      </Description>\n      <AboutImage\n        src={process.env.PUBLIC_URL + \"/chris-rosiak-wMloxuYrjt0-unsplash.jpg\"}\n        alt=\"\"\n      />\n    </AboutContainer>\n  );\n}\n\nexport default About;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Nav } from 'react-bootstrap';\nimport styled from 'styled-components';\n\n// Components\nimport Signup from './Components/Signup';\nimport Login from './Components/Login';\nimport UpdateAccount from './Components/UpdateAccount';\nimport ManageAccount from './Components/ManageAccount';\nimport Navigation from './Components/Navigation';\nimport Trails from './Containers/Trails';\nimport TrailShow from './Containers/TrailShow';\nimport TrailSearch from './Components/TrailSearch';\nimport MyHikes from './Containers/MyHikes';\nimport Landing from './Components/Landing';\nimport About from './Components/About';\n\nconst AppContainer = styled.div`\n  text-align: center;\n  & .btn:focus {\n    outline: none;\n    box-shadow: none;\n  }\n  & .headline {\n    font-family: 'Amatic SC', cursive;\n  }\n  & .subtext {\n    font-family: 'Source Sans Pro', sans-serif;\n  }\n`;\n\nconst RouterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst AppBody = styled.div`\n  background-color: #ffffff21;\n  margin-top: 14vh;\n  min-height: 72vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  color: black;\n`;\n\nconst Footer = styled.footer`\n  font-size: 1.1em;\n  background: #f5f5f5;\n  color: #635d5d;\n  padding: 1rem 0;\n  p {\n    margin: 0;\n  }\n  a {\n    color: #909090;\n  }\n  a:hover {\n    color: #5a5858;\n  }\n`;\n\nconst App = () => {\n  const [checkedLogin, setCheckedLogin] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const checkUserLogin = async () => {\n      if (localStorage.userId) {\n        const resp = await axios.get('https://nameless-wave-57808.herokuapp.com/api/v1/logged_in', { withCredentials: true });\n        dispatch({\n          type: \"SET_LOCATION\",\n          payload: {\n            coords: {\n              latitude: localStorage.getItem(\"latitude\"),\n              longitude: localStorage.getItem(\"longitude\")\n            },\n          },\n        });\n        dispatch({type: \"SET_USER\", payload: resp.data});\n      }\n    };\n\n    checkUserLogin();\n    \n    setCheckedLogin(true);\n  }, []);\n\n  return (\n    <AppContainer>\n      {checkedLogin && (\n        <RouterWrapper>\n          <Router>\n            <header>\n              <Navigation></Navigation>\n            </header>\n            <AppBody>\n              <Switch>\n                <Route exact path=\"/\">\n                  <Landing></Landing>\n                </Route>\n                <Route exact path=\"/signup\">\n                  <Signup></Signup>\n                </Route>\n                <Route exact path=\"/login\">\n                  <Login></Login>\n                </Route>\n                <Route exact path=\"/account\">\n                  <ManageAccount></ManageAccount>\n                </Route>\n                <Route exact path=\"/update-account\">\n                  <UpdateAccount></UpdateAccount>\n                </Route>\n                <Route exact path=\"/trailsearch\">\n                  <TrailSearch></TrailSearch>\n                </Route>\n                <Route exact path=\"/trails/:slug\" component={TrailShow} />\n                <Route exact path=\"/myhikes\">\n                  <MyHikes></MyHikes>\n                </Route>\n                <Route exact path=\"/trails\">\n                  <Trails></Trails>\n                </Route>\n                <Route exact path=\"/about\">\n                  <About></About>\n                </Route>\n              </Switch>\n            </AppBody>\n            <Footer className=\"subtext\">\n              <p>\n                <strong>Trailblaze 2021</strong>\n              </p>\n              <Nav className=\"justify-content-center\">\n                <Link className=\"nav-link navbar-link\" to=\"/about\">\n                  About\n                </Link>\n                <a\n                  href=\"mailto: smitham50@gmail.com\"\n                  className=\"nav-link navbar-link\"\n                >\n                  Contact\n                </a>\n              </Nav>\n            </Footer>\n          </Router>\n        </RouterWrapper>\n      )}\n    </AppContainer>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const defaultState = {\n    currentUserData: {},\n    latitude: null,\n    longitude: null\n}\n\nfunction userReducer(prevState = defaultState, action) {\n    switch(action.type) {\n        case \"SET_USER\":\n            return {\n                ...prevState,\n                currentUserData: action.payload\n            }\n        case \"CLEAR_USER\":\n            return {\n                ...prevState,\n                latitude: \"\",\n                longitude: \"\",\n                currentUserData: {}\n            }\n        case \"SET_LOCATION\":\n            const coordinates = action.payload.coords;\n            if (!localStorage.latitude) {\n                localStorage.latitude = coordinates.latitude;\n                localStorage.longitude = coordinates.longitude;\n            }\n            return {\n                ...prevState,\n                latitude: coordinates.latitude,\n                longitude: coordinates.longitude\n            }\n        default:\n            return prevState;\n    }\n}\n\nexport default userReducer;","const defaultState = {\n    distance: 60,\n    mileage: \"Less than 3\",\n    difficulty: \"\",\n    trails: []\n}\n\nfunction trailSearchReducer(prevState = defaultState, action) {\n    switch (action.type) {\n        case \"HANDLE_CHANGE\":\n            let fieldKey = Object.keys(action.payload)[0];\n            return {\n                ...prevState,\n                [fieldKey]: action.payload[fieldKey]\n            }\n        case \"SET_TRAILS\":\n            localStorage.removeItem('trails');\n            localStorage.trails = action.payload.map(trail => {\n                return trail.id;\n            });\n            return {\n                ...prevState,\n                trails: action.payload\n            }\n        default:\n            return prevState;\n    }\n}\n\nexport default trailSearchReducer;","const defaultState = {\n    trail: null,\n    fromSearchPage: false \n}\n\nfunction trailSearchReducer(prevState = defaultState, action) {\n    switch (action.type) {\n        case \"SET_TRAIL\":\n            return {\n                ...prevState,\n                trail: action.payload\n            }\n        case \"SET_PREVIOUS_PAGE\":\n            const fromSearchPage = action.payload.pathname.slice(1,7) === \"trails\" ? true : false;\n            return {\n                ...prevState,\n                fromSearchPage: fromSearchPage\n            }\n        default:\n            return prevState;\n    }\n}\n\nexport default trailSearchReducer;","const defaultState = {\n    hikes: []\n}\n\nfunction myHikesReducer(prevState = defaultState, action) {\n    switch (action.type) {\n        case \"SET_HIKES\":\n            return {\n                ...prevState,\n                hikes: action.payload\n            }\n        default:\n            return prevState;\n    }\n}\n\nexport default myHikesReducer;","const defaultState = {\n    flashMessage: false,\n    alert: \"\",\n    messages: [],\n    username: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    email: \"\"\n}\n\nfunction formReducer(prevState = defaultState, action) {\n    switch (action.type) {\n        case \"SET_FLASH_MESSAGE\":\n            const { alert, messages } = action.payload;\n            return {\n                ...prevState,\n                flashMessage: true,\n                alert: alert,\n                messages: messages\n            }\n        case \"UNMOUNT_FLASH_MESSAGE\":\n            return {\n                ...prevState,\n                flashMessage: false,\n                alert: \"\",\n                messages: []\n            }\n        case \"HANDLE_CHANGE\":\n            let inputField = Object.keys(action.payload)[0];\n            return {\n                ...prevState,\n                [inputField]: action.payload[inputField]\n            }\n        default:\n            return prevState;\n    }\n}\n\nexport default formReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\n\n// Reducers\nimport userReducer from './Reducers/userreducer';\nimport trailSearchReducer from './Reducers/trailSearchReducer';\nimport trailShowReducer from './Reducers/trailShowReducer';\nimport myHikesReducer from './Reducers/myHikesReducer';\nimport formReducer from './Reducers/formReducer';\n\nconst rootReducer = combineReducers({ \n  user: userReducer, \n  trailSearch: trailSearchReducer,\n  trailShow: trailShowReducer,\n  myHikes: myHikesReducer,\n  form: formReducer\n});\nconst store = createStore(rootReducer);\n\n// Axios defaults\naxios.defaults.xsrfCookieName = \"CSRF-TOKEN\";\naxios.defaults.xsrfHeaderName = \"X-CSRF-Token\";\naxios.defaults.withCredentials = true;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}